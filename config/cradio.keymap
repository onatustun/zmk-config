#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        commaqmrk: commaqmrk {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMAQMRK";
            bindings = <&kp COMMA>, <&kp QUESTION>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dotless: dotless {
            compatible = "zmk,behavior-mod-morph";
            label = "DOTLESS";
            bindings = <&kp PERIOD>, <&kp LESS_THAN>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        slashgreater: slashgreater {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASHGREATER";
            bindings = <&kp SLASH>, <&kp GREATER_THAN>;
            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        // Custom sticky key behavior that ignores modifier keys
        sk_mod: sticky_key_modifier {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_MODIFIER";
            #binding-cells = <1>;
            bindings = <&kp>;
            // Standard sticky key behavior but with longer release-after-ms
            release-after-ms = <1000>;
            // These are the key positions of your modifier keys that should not
            // cancel the sticky effect - positions from your layer_2
            ignore-key-positions = <1 2 3>;
            quick-release;
        };

        // Updated stickyhold behavior that uses our custom sticky key
        stickyhold: stickyhold {
            compatible = "zmk,behavior-hold-tap";
            label = "STICKYHOLD";
            bindings = <&kp>, <&sk_mod>;
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "balanced";
        };

        // Additional combo behaviors for common modifier combinations
        ctrl_gui: ctrl_gui {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL_GUI";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&sk_mod LCTRL>, <&sk_mod LGUI>, <&sk_both_cg>;
        };

        sk_both_cg: sticky_both_ctrl_gui {
            compatible = "zmk,behavior-macro";
            label = "SK_BOTH_CTRL_GUI";
            #binding-cells = <0>;
            bindings = <&macro_press &kp LCTRL &kp LGUI>,
                       <&macro_pause_for_release>,
                       <&macro_release &kp LCTRL &kp LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y      &kp U  &kp I       &kp O     &kp P
&kp A  &kp S  &kp D  &kp F  &kp G        &kp H      &kp J  &kp K       &kp L     &kp SEMI
&kp Z  &kp X  &kp C  &kp V  &kp B        &kp N      &kp M  &commaqmrk  &dotless  &slashgreater
                     &mo 2  &kp LSHFT    &kp SPACE  &mo 1
            >;
        };

        layer_1 {
            bindings = <
&kp GRAVE  &kp APOS  &none   &none   &none     &none   &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT
&kp N1     &kp N2    &kp N3  &kp N4  &kp N5    &kp N6  &kp N7     &kp N8     &kp N9    &kp N0
&kp BSLH   &none     &none   &none   &none     &none   &none      &trans     &trans    &trans
                             &trans  &trans    &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&kp TAB  &stickyhold LALT LALT  &stickyhold LCTRL LCTRL  &stickyhold LGUI LGUI  &ctrl_gui    &none            &none           &none         &none            &kp BACKSPACE
&kp ESC  &mo 3                  &mkp MB4                 &mkp MB5                &none        &kp LEFT_ARROW   &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp ENTER
&mo 4    &none                  &none                    &none                   &none        &none            &none           &none         &none            &mo 5
                                                         &trans                  &trans       &kp RIGHT_SHIFT  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans    &trans    &trans      &trans          &trans          &trans        &trans           &trans
&trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans  &trans    &trans    &trans      &trans          &trans          &trans        &trans           &trans
                          &trans    &trans      &trans          &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&mo 4   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &mo 5
                        &trans  &trans    &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&mo 4   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &mo 5
                        &trans  &trans    &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&none   &kp F1  &kp F2   &kp F3   &kp F4     &none   &bt BT_PRV  &bt BT_NXT      &none  &none
&none   &kp F5  &kp F6   &kp F7   &kp F8     &none   &none       &none           &none  &none
&trans  &kp F9  &kp F10  &kp F11  &kp F12    &none   &bt BT_CLR  &bt BT_CLR_ALL  &none  &trans
                         &trans   &trans     &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        bltfn {
            if-layers = <4 5>;
            then-layer = <6>;
        };
    };
};
